<!-- zimaleto version checks for multiple shipping line items instead of just one, base script beta -->
<scraper name="shopifyGetSaleOrderDetailsScript" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.unicommerce.com/schema/scraper-1.0.xsd" cachehttpclient="false">
	<!-- 
        CUSTOMIZATIONS Supported in the script
        -> saleOrderJson : 
                all the fields from SaleOrderAPI response can be fetched from this json.
                e.g SOURCE_NAME: "#{T(com.unifier.core.utils.JsonUtils).getAsString(#saleOrderJson, 'source_name')}"
        -> saleOrderTransaction :
                the fields available from this object are the SaleOrderTransactionAPI response fields.
                e.g RECEIPT: "#{T(com.unifier.core.utils.JsonUtils).getAsString(#saleOrderTransaction, 'receipt')}"
        -> receiptJson :
                all fields from a receipt object from a saleOrder Transaction are available from this json.
                e.g X_WEB_REF: "#{T(com.unifier.core.utils.JsonUtils).getAsString(#receiptJson, 'x_gateway_reference')}"

        PARAMS: 
                channel
                source
                saleOrderCode
                saleOrderElement
                saleOrderDetailElement - Map<SaleOrderCode,SaleOrderDetails>
                metadata
                applicationContext
     -->
	<method name="populateCustomFields">
		<var name="customFieldMap" value="#{new java.util.HashMap()}" />
		<if condition="#{#customFieldsCustomization == null or ''.equals(#customFieldsCustomization)}">
			<var name="customFieldsCustomization" value="[]" />
		</if>
		<try>
			<var name="customFieldsCustomizationMap" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#customFieldsCustomization)}" />
			<var name="customFieldsCustomizationMapIterator" value="#{#customFieldsCustomizationMap.getAsJsonArray().iterator()}" />
			<while condition="#{#customFieldsCustomizationMapIterator.hasNext()}">
				<var name="customField" value="#{#customFieldsCustomizationMapIterator.next()}" />
				<var name="customFieldEntrySet" value="#{#customField.entrySet().iterator()}" />
				<var name="entry" value="#{#customFieldEntrySet.next()}" />
				<try>
					<var name="customFieldValue" value="#{T(com.unifier.scraper.sl.expression.SLExpression).compile(#entry.getValue()).evaluate(T(com.unifier.scraper.sl.runtime.ScriptExecutionContext).current())}" />
					<var value="#{#customFieldMap.put(#entry.getKey(),#customFieldValue)}" />
					<catch>
						<!-- TODO Stop execution or NOT
                        create new method
                    -->
						<log level="info" value="Error with CustomField : #{#entry.getKey()}" />
					</catch>
				</try>
			</while>
			<startTag name="CustomFields" />
			<var name="customFieldMapIterator" value="#{#customFieldMap.entrySet().iterator()}" />
			<while condition="#{#customFieldMapIterator.hasNext()}">
				<var name="customFieldMapElement" value="#{#customFieldMapIterator.next()}" />
				<var name="customFieldMapKey" value="#{#customFieldMapElement.getKey()}" />
				<var name="customFieldMapValue" value="#{#customFieldMapElement.getValue()}" />
				<log level="info" value="customFieldMapElement : #{#customFieldMapElement.toString()}" />
				<if condition="#{#customFieldMapKey != null and #customFieldMapValue != null}">
					<startTag name="CustomField">
						<attribute name="name" value="#{#customFieldMapKey}" />
						<attribute name="value" value="#{#customFieldMapValue.replaceAll('&quot;','').replaceAll('&amp;', '').replaceAll('\n', ' ')}" />
					</startTag>
					<endTag name="CustomField" />
				</if>
			</while>
			<endTag name="CustomFields" />
			<catch>
				<log level="info" value="#{#TAG} Invalid format for Additional Custom Fields MAPPING config parameter" />
			</catch>
		</try>

	</method>

	<method name="addAddressDetail">
		<!-- name = firstName + lastName -->
		<var name="customerName" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'first_name')} #{T(com.unifier.core.utils.StringUtils).getNotNullValue(T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'last_name'))}" />
		<!-- Removing any character which lies beyond the basic multilingual plane. Eg: Emojis -->
		<var name="customerName" value="#{#customerName.replaceAll('[^\u0000-\uffff]', '')}" />
		<var name="name" value="#{#customerName}" />
		<!-- Company  name -->
		<try>
			<var name="company" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'company')}" />
			<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#company)}">
				<var name="company" value="#{#company.replaceAll(&quot;\P{Print}&quot;, &quot;&quot;)}" />
				<else>
					<var name="company" value="" />
				</else>
			</if>
			<catch>
				<var name="company" value="" />
			</catch>
		</try>
		<!-- Address line1 = companyName + addressLine1 -->
		<try>
			<!-- ! we may encounter IndexOutOfBoundsException -->
			<var name="addressLine1" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'address1').replaceAll(&quot;\P{Print}&quot;, &quot;&quot;)}" />
			<catch>
				<var name="addressLine1" value="" />
			</catch>
		</try>
		<var name="addressLine1" value="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#company)? (#company +', '+ #addressLine1) : #addressLine1}" />
		<!-- Address line2 -->
		<try>
			<!-- ! we may encounter IndexOutOfBoundsException -->
			<var name="addressLine2" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'address2')}" />
			<catch>
				<var name="addressLine2" value="" />
			</catch>
		</try>
		<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#addressLine2)}">
			<try>
				<var name="addressLine2" value="#{#addressLine2.replaceAll(&quot;\P{Print}&quot;, &quot;&quot;)}" />
				<catch>
					<var name="addressLine2" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'address2')}" />
				</catch>
			</try>
		</if>

		<!-- pincode [contains only letters and digit ] -->
		<var name="pincode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'zip')}" />
		<var name="pincode" value="#{#pincode != null ? T(com.unifier.core.utils.StringUtils).removeNonWordChars(#pincode) : null}" />
		<var name="city" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'city')}" />
		<var name="state" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'province')}" />
		<var name="country" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'country')}" />
		<var name="countryCode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'country_code')}" />

		<!-- if stateCodeRequired false make city as state else work as pervious -->
		<log level="debug" value="#{#TAG} stateCodeRequired : #{#stateCodeRequired}" />
		<if condition="#{T(com.unifier.core.utils.StringUtils).isBlank(#state) and !#stateCodeRequired}">
			<var name="state" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'city')}" />
			<else>
				<!-- If state is blank and country is INDIA than get state by hitting flipkart API -->
				<if condition="#{T(com.unifier.core.utils.StringUtils).isBlank(#state)} and #country.equalsIgnoreCase('india')}">
					<http method="post" url="https://www.flipkart.com/xhr/getCityAndStateForPinCode" var="getStateResponse">
						<param name="pincode" value="#{#pincode}" />
					</http>
					<var name="getStateJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#getStateResponse)}" />
					<var name="state" value="#{#getStateJson.get('data') != '' ? #getStateJson.get('data').get('state').getAsString() : ''}" />
				</if>
			</else>
		</if>

		<!-- Custom values for 'state', 'city', for specific 'Country_code' values -->
		<if condition="#{#countryCode != null and 'SA'.equalsIgnoreCase(#countryCode)}">
			<log level="info" value="#{#TAG} Custom values assigned for 'state', 'city' for 'country_code' SA." />
			<var name="state" value="SA-SA" />
			<var name="city" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'city')},#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'province')}" />
		</if>
		<if condition="#{#countryCode != null and 'SG'.equalsIgnoreCase(#countryCode)}">
			<log level="info" value="#{#TAG} Custom values assigned for 'state' for 'country_code' SG." />
			<var name="state" value="SG-SG" />
		</if>
		<!-- -->


		<!-- Phone Number. If phoneNumber is empty that set it to default "9999999999" -->
		<var name="phone" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#address, 'phone')}" />
		<var name="phone" value="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#phone) ? #phone : '9999999999'}" />
		<!-- country_code -->
		<if condition="#{'IN'.equalsIgnoreCase(#countryCode)}">
			<if condition="#{#phone.length() >= 3}">
				<if condition="#{'+91'.equalsIgnoreCase(#phone.substring(0,3))}">
					<var name="phone" value="#{#phone.substring(3)}" />
				</if>
			</if>
		</if>
		<!-- map above field to uniware field -->
		<startTag name="Address">
			<attribute name="id" value="#{#addressId}" />
		</startTag>
		<valueTag name="Name" value="#{#name}" cdata="true" />
		<valueTag name="AddressLine1" value="#{#addressLine1}" cdata="true" />
		<valueTag name="AddressLine2" value="#{#addressLine2}" cdata="true" />
		<valueTag name="City" value="#{#city}" cdata="true" />
		<valueTag name="State" value="#{#state}" cdata="true" />
		<valueTag name="Pincode" value="#{#pincode}" cdata="true" />
		<valueTag name="Country" value="#{#country}" cdata="true" />
		<valueTag name="Phone" value="#{#phone}" cdata="true" />
		<endTag name="Address" />
	</method>

	<method name="addSaleOrderItem">
		<startTag name="SaleOrderItem" />
		<valueTag name="Code" value="#{#saleOrderItemCode}" />
		<valueTag name="ChannelSaleOrderItemCode" value="#{#channelSaleOrderItemCode}" />
		<valueTag name="ItemSKU" value="#{#itemSkuCode}" cdata="true" />
		<valueTag name="ChannelProductId" value="#{#channelProductId}" cdata="true" />
		<valueTag name="ItemName" value="#{#itemName}" cdata="true" />
		<valueTag name="ShippingMethodCode" value="STD" />
		<var name="giftMessage" value="#{#giftMessage.replaceAll('[^\u0000-\uffff]', '')}" />
		<!-- Added from v1.1 -->
		<if condition="#{!T(com.unifier.core.utils.StringUtils).isBlank(#giftMessage)}">
			<valueTag name="GiftMessage" value="#{#giftMessage}" cdata="true" />
		</if>

		<var name="productPrice" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#itemJson.get('price').getAsString())}" />
		<valueTag name="TotalPrice" value="#{#productPrice}" />
		<valueTag name="SellingPrice" value="#{#productPrice}" />
		<if condition="#{#saleOrderJson.get('discount_codes') != null and !#saleOrderJson.get('discount_codes').isJsonNull()}">
			<var name="discountCodeIterator" value="#{#saleOrderJson.get('discount_codes').getAsJsonArray().iterator()}" />
			<if condition="#{#discountCodeIterator.hasNext()}">
				<var name="voucherCodeElement" value="#{#discountCodeIterator.next()}" />
				<var name="voucherCode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#voucherCodeElement, 'code')}" />
				<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#voucherCode)}">
					<if condition="#{#voucherCode.length() > 45 }">
						<var name="voucherCode" value="#{#voucherCode.substring(0,45)}" />
					</if>
					<valueTag name="VoucherCode" value="#{#voucherCode}" cdata="true" />
				</if>
			</if>
		</if>

		<valueTag name="PacketNumber" value="#{#packetNumberForItem}" />
		<endTag name="SaleOrderItem" />
	</method>

	<method name="addSaleOrder">
		<startTag name="CreateSaleOrderRequest">
			<attribute name="xmlns" value="http://uniware.unicommerce.com/services/" />
		</startTag>
		<startTag name="SaleOrder" />
		<valueTag name="Code" value="#{#saleOrderCode}" />
		<valueTag name="CashOnDelivery" value="#{#cashOnDelivery}" />
		<log level="debug" value="#{#TAG} prefix: #{#prefix}" />
		<if condition="#{'TRUE'.equalsIgnoreCase(#prefix)}">
			<var name="displayOrderCode" value="#{#saleOrderJson.get('name').getAsString()}" />
			<else>

				<var name="displayOrderCode" value="#{#saleOrderJson.get('order_number').getAsString()}" />
			</else>
		</if>
		<valueTag name="DisplayOrderCode" value="#{#displayOrderCode}" />
		<if condition="#{!#saleOrderJson.get('checkout_id').isJsonNull()}">
			<try>
				<var name="checkoutId" value="#{#saleOrderJson.get('checkout_id').getAsString()}" />
				<var name="additionalInfoMap" value="#{new java.util.HashMap()}" />
				<var value="#{#additionalInfoMap.put('checkoutId', #checkoutId)}" />
				<var name="additionalInfoMap" value="#{T(com.unifier.core.utils.JsonUtils).objectToString(#additionalInfoMap)}" />
				<valueTag name="AdditionalInfo" value="#{#additionalInfoMap}" />
				<valueTag name="TransactionId" value="#{#saleOrderJson.get('checkout_id').getAsString()}" />
				<valueTag name="PaymentMode" value="#{#saleOrderJson.get('payment_gateway_names').getAsString()}" />
				<valueTag name="TransactionDate" value="#{#saleOrderJson.get('created_at').getAsString()}" />
				<!-- Added from testPaymentDetails -->
				<valueTag name="AmountPaid" value="#{#saleOrderJson.get('shop_money').get('amount').getAsString()}" />
				<catch>
					<log level="info" value="#{#TAG} can't save AdditionalInfo into Map" />
				</catch>
			</try>
		</if>
		<var name="shopifyDatePattern" value="yyyy-MM-dd'T'HH:mm:ss" />
		<var name="uniwareDatePattern" value="yyyy-MM-dd'T'HH:mm:ss" />
		<var name="shopifyDate" value="#{T(com.unifier.core.utils.DateUtils).stringToDate(#saleOrderJson.get('created_at').getAsString(), #shopifyDatePattern)}" />
		<log level="debug" value="#{#TAG} created_at : #{#shopifyDate.toString()}" />
		<valueTag name="DisplayOrderDateTime" value="#{T(com.unifier.core.utils.DateUtils).dateToString(#shopifyDate, #uniwareDatePattern)}+05:30" cdata="true" />
		<!-- ? QUERY : Shouldn't Customer-Phone be used as NotificationMobile? -->
		<!-- ? QUERY : Shouldn't NotificationMobile and Email belong to same object i.e. CustomerDefaultAddress/BillingAddress/ShippingAddress? -->
		<var name="notificationMobile" value="#{T(com.unifier.core.utils.ValidatorUtils).getValidMobileOrNull(T(com.unifier.core.utils.JsonUtils).getAsString(#billingAddress, 'phone'))}" />
		<if condition="#{#notificationMobile != null}">
			<valueTag name="NotificationMobile" value="#{#notificationMobile}" />
		</if>
		<valueTag name="NotificationEmail" value="#{#saleOrderJson.get('email').getAsString()}" cdata="true" />

		<valueTag name="CurrencyCode" value="#{#saleOrderJson.get('currency').getAsString()}" />


		<if condition="#{#saleOrderJson.get('note_attributes') != null and !#saleOrderJson.get('note_attributes').isJsonNull()}">
			<var name="noteAttributes" value="#{#saleOrderJson.get('note_attributes').getAsJsonArray()}" />
			<var name="noteAttributesIterator" value="#{#noteAttributes.iterator()}" />
			<while condition="#{#noteAttributesIterator.hasNext()}">
				<var name="noteAttribute" value="#{#noteAttributesIterator.next()}" />
				<var name="noteAttributeName" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#noteAttribute, 'name')}" />
				<if condition="#{#noteAttributeName.equalsIgnoreCase('CustomerGSTIN')}">
					<var name="customerGSTIN" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#noteAttribute, 'value')}" />
					<valueTag name="CustomerGSTIN" value="#{#customerGSTIN}" />
					<break />
				</if>
			</while>
		</if>

		<var name="discount" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#saleOrderJson.get('total_discounts').getAsString())}" />
		<log level="debug" value="#{#TAG} TOTAL DISCOUNT : #{#discount}" />

		<var name="shippingChargesIterator" value="#{#saleOrderJson.get('shipping_lines').getAsJsonArray().iterator()}" />
		<var name="shippingCharges" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(0.00)}" />
		<while condition="#{#shippingChargesIterator.hasNext()}">
			<var name="charge" value="#{#shippingChargesIterator.next()}" />
			<var name="title" value="#{#charge.get('title').getAsString()}" />
			<if condition="#{#title.contains('Cash on Delivery')}">
				<var name="codCharges" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#charge.get('price').getAsString())}" />
				<else>
					<var name="shippingCharges" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#charge.get('price').getAsString()).add(#shippingCharges)}" />
				</else>
			</if>
		</while>
		<valueTag name="TotalShippingCharges" value="#{#shippingCharges}" />
		<valueTag name="TotalCashOnDeliveryCharges" value="#{#codCharges!=null?#codCharges: T(com.unifier.core.utils.NumberUtils).newBigDecimal(0.00)}" />
		<var name="prepaidAmount" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#giftDiscount)}" />
		<var name="subtotal" value="#{T(com.unifier.core.utils.NumberUtils).newBigDecimal(#saleOrderJson.get('total_line_items_price').getAsString())}" />
		<var name="totalOrderAmount" value="#{#shippingCharges.add(#subtotal)}" />
		<if condition="#{(#prepaidAmount.add(#discount)) &gt; #totalOrderAmount}">
			<var name="prepaidAmount" value="#{#totalOrderAmount.subtract(#discount)}" />
		</if>
		<valueTag name="TotalDiscount" value="#{#discount}" />
		<valueTag name="TotalPrepaidAmount" value="#{#prepaidAmount}" />
		<log level="debug" value="#{#TAG} TOTAL PREPAID : #{#prepaidAmount}" />
		<var name="customerName" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#billingAddress, 'first_name')} #{T(com.unifier.core.utils.StringUtils).getNotNullValue(T(com.unifier.core.utils.JsonUtils).getAsString(#billingAddress, 'last_name'))}" />

		<startTag name="Addresses" />

		<invoke method="addAddressDetail">
			<param name="addressId" value="1" />
			<param name="address" value="#{#billingAddress}" />
		</invoke>

		<if condition="#{#billingAddress != #shippingAddress}">
			<invoke method="addAddressDetail">
				<param name="addressId" value="2" />
				<param name="address" value="#{#shippingAddress}" />
			</invoke>
		</if>
		<endTag name="Addresses" />

		<startTag name="BillingAddress">
			<attribute name="ref" value="1" />
		</startTag>
		<endTag name="BillingAddress" />

		<startTag name="ShippingAddress">
			<attribute name="ref" value="#{#billingAddress != #shippingAddress ? '2' : '1'}" />
		</startTag>
		<endTag name="ShippingAddress" />

		<startTag name="SaleOrderItems" />
		<var name="lineItemsIterator" value="#{#saleOrderJson.get('line_items').getAsJsonArray().iterator()}" />
		<var name="itemToPacketNumberMap" value="#{new java.util.LinkedHashMap()}" />
		<var name="packetNumberForMap" value="#{1}" />
		<var name="CYOBFlag" value="#{false}" />
		<!-- review left here -->
		<while condition="#{#lineItemsIterator.hasNext()}">
			<var name="itemJson" value="#{#lineItemsIterator.next()}" />
			<if condition="#{#itemJson.get('fulfillable_quantity').getAsInt() &gt; 0}">
				<var name="itemName" value="#{#itemJson.get('name').getAsString()}" />
				<if condition="#{#itemName.length() &gt; 199}">
					<var name="itemName" value="#{#itemName.substring(0, 199)}" />
				</if>
				<var name="itemName" value="#{#itemName.replaceAll('[^\u0000-\uffff]', '')}" />
				<var name="itemSkuCode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#itemJson, 'sku')}" />
				<var name="channelProductId" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#itemJson, 'product_id')}" />
				<var name="variantId" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#itemJson, 'variant_id')}" />
				<!-- AE-956 AE-958, Split Shipment on FULFILLMENT Basis and Custom Field basis -->
				<log level="info" value="splitShipmentCondition : #{#splitShipmentCondition}" />
				<if condition="#{'FULFILLMENT'.equalsIgnoreCase(#splitShipmentCondition)}">
					<var name="itemFulfillmentStatus" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#itemJson, 'fulfillment_status')}" />
					<if condition="#{'FULFILLED'.equalsIgnoreCase(#itemFulfillmentStatus)}">
						<var name="packetNumberForItem" value="2" />
						<else>
							<var name="packetNumberForItem" value="1" />
						</else>
					</if>
					<else>
						<if condition="#{'CUSTOM'.equalsIgnoreCase(#splitShipmentCondition)}">
							<!-- Logic for CYOB-UDF -->
							<var name="CYOBFlag" value="#{true}" />
							<else>
								<if condition="#{#channel.packageType == 'FIXED'}">
									<var name="packetNumberForItem" value="1" />
									<else>
										<var name="packetNumberForItem" value="0" />
									</else>
								</if>
							</else>
						</if>
					</else>
				</if>
				<var name="giftMessage" value="" />
				<var name="propertiesIterator" value="#{#itemJson.get('properties').getAsJsonArray().iterator()}" />
				<!--
				<if condition="#{#propertiesIterator.hasNext()}">
					<var name="giftMessage" value="#{#itemJson.get('properties').toString()}" />
				</if>
				-->
				<while condition="#{#propertiesIterator.hasNext()}">
					<var name="propertyItem" value="#{#propertiesIterator.next()}" />
					<try>
						<var name="propertyItemName" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#propertyItem, 'name')}" />
						<var name="propertyItemValue" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#propertyItem, 'value')}" />
						<!--
                        <if condition="#{'NOTE'.equalsIgnoreCase(#propertyItemName)}">
                            <var name="giftMessage" value="#{#propertyItemValue}" />
                        </if> -->
						<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#giftMessage)}">
							<var name="giftMessage" value="#{#giftMessage+','+#propertyItemName+':'+#propertyItemValue}" />
							<else>
								<var name="giftMessage" value="#{#propertyItemName+':'+#propertyItemValue}" />
							</else>
						</if>

						<if condition="#{#CYOBFlag}">
							<if condition="#{'_BID'.equalsIgnoreCase(#propertyItemName)}">
								<var name="boxID" value="#{#propertyItemValue}" />
								<if condition="#{#boxID != null}">
									<if condition="#{#itemToPacketNumberMap.get(#boxID) == null}">
										<var value="#{#itemToPacketNumberMap.put(#boxID, #packetNumberForMap)}" />
										<var name="packetNumberForMap" value="#{#packetNumberForMap + 1}" />
									</if>
									<var name="packetNumberForItem" value="#{#itemToPacketNumberMap.get(#boxID)}" />
								</if>
							</if>
						</if>
						<catch>
							<log level="info" value="#{#TAG} Skipping propertyItem" />
						</catch>
					</try>
				</while>
				<!-- BOX-ID Logic Here -->
				<if condition="#{#packetNumberForItem == null}">
					<var name="packetNumberForItem" value="0" />
				</if>

				<if condition="#{#giftMessage.length() &gt; 256}">
					<var name="giftMessage" value="#{#giftMessage.substring(0, 256)}" />
				</if>

				<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#variantId)}">
					<var name="channelProductId" value="#{#channelProductId}-#{#variantId}" />
				</if>
				<if condition="#{T(com.unifier.core.utils.StringUtils).isBlank(#channelProductId)}">
					<var name="channelProductId" value="#{#itemName}" />
					<if condition="#{#channelProductId.length() &gt; 127}">
						<var name="channelProductId" value="#{#channelProductId.substring(0, 127)}" />
					</if>
				</if>
				<if condition="#{T(com.unifier.core.utils.StringUtils).isBlank(#itemSkuCode)}">
					<var name="itemSkuCode" value="#{#channelProductId}" />
				</if>
				<var name="itemCount" value="#{0}" />
				<var name="productQuantity" value="#{#itemJson.get('quantity').getAsInt()}" />
				<var name="channelSaleOrderItemCode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#itemJson, 'id')}" />
				<if condition="#{#productQuantity == 1}">
					<var name="saleOrderItemCode" value="#{#channelSaleOrderItemCode}" />
					<invoke method="addSaleOrderItem" />
					<else>
						<while condition="#{#itemCount &lt; #productQuantity}">
							<var name="saleOrderItemCode" value="#{#channelSaleOrderItemCode + '-' + #itemCount}" />
							<invoke method="addSaleOrderItem" />
							<var name="itemCount" value="#{#itemCount + 1}" />
						</while>
					</else>
				</if>
				<else>
					<var name="itemName" value="#{#itemJson.get('name').getAsString()}" />
					<log level="info" value="#{#TAG} Item Cancelled from Shopify : #{#itemName}" />
				</else>
			</if>
		</while>
		<endTag name="SaleOrderItems" />
		<!-- Custom Fields Customizations | AE-968 -->
		<invoke method="populateCustomFields" />

		<try>
			<invoke method="postprocessor" script="shopifyCustomizationsScript">
				<param name="saleOrderJson" value="#{#saleOrderJson}" />
				<param name="TAG" value="#{#TAG}" />
			</invoke>
			<!-- Priority -->
			<if condition="#{#saleOrderJson.get('ucPriority') != null}">
				<var name="ucPriority" value="#{#saleOrderJson.get('ucPriority').getAsInt()}" />
				<valueTag name="Priority" value="#{#ucPriority}" />
				<else>
					<log level="info" value="#{#TAG} 'ucPriority' JSON field NOT_SET." />
				</else>
			</if>

			<catch>
				<log level="info" value="#{#TAG} #{#_e.getMessage()}" />
			</catch>
		</try>
		<endTag name="SaleOrder" />
		<endTag name="CreateSaleOrderRequest" />
	</method>

	<var name="authHeaders" value="#{#metadata.get('authHeaders')}" />
	<var name="url" value="#{#metadata.get('url')}" />
	<if condition="#{#authHeaders == null or #url == null}">
		<var name="authHeadersAndUrl" value="#{new java.util.HashMap()}" />
		<var name="channelConnectorParams" value="#{new java.util.HashMap()}" />
		<var value="#{#channelConnectorParams.put('apiKey',#apiKey)}" />
		<var value="#{#channelConnectorParams.put('password',#password)}" />
		<var value="#{#channelConnectorParams.put('accessToken',#token)}" />
		<var value="#{#channelConnectorParams.put('hostname',#hostname)}" />

		<invoke method="getAuthHeadersAndUrl" script="shopifyUtils">
			<param name="channelConnectorParams" value="#{#channelConnectorParams}" />
			<param name="authHeadersAndUrl" value="#{#authHeadersAndUrl}" />
		</invoke>

		<var name="authHeaders" value="#{#authHeadersAndUrl.get('authHeaders')}" />
		<var name="url" value="#{#authHeadersAndUrl.get('url')}" />
	</if>

	<log level="info" value="#{#TAG} url : #{#url}, authHeaders : #{#authHeaders.toString()}" />


	<log level="debug" value="#{#TAG} SaleOrderDetailElement : #{#saleOrderDetailElement.toString()}" />
	<var name="saleOrderJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#saleOrderDetailElement)}" />

	<if condition="#{#applicableProvinceCodes != null}">
		<var name="provinces" value="#{#applicableProvinceCodes.split(',')}" />
		<var name="allowedProvinceCodesList" value="#{new java.util.ArrayList()}" />
		<var value="#{#allowedProvinceCodesList.addAll(#provinces)}" />
		<else>
			<var name="allowedProvinceCodesList" value="#{null}" />
		</else>
	</if>

	<var name="defaultAddress" value="#{#saleOrderJson.get('customer') != null ? #saleOrderJson.get('customer').get('default_address') : null}" />
	<var name="shippingAddress" value="#{#saleOrderJson.get('shipping_address') != null ? #saleOrderJson.get('shipping_address') : #defaultAddress }" />
	<var name="billingAddress" value="#{#saleOrderJson.get('billing_address') != null ? #saleOrderJson.get('billing_address') : #defaultAddress != null ? #defaultAddress: #shippingAddress}" />
	<if condition="#{#billingAddress == null or #shippingAddress == null}">
		<scriptError message="Billing/Shipping addresses not found" />
	</if>

	<var name="provinceCode" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#shippingAddress != null ? #shippingAddress : #billingAddress, 'province_code')}" />
	<if condition="#{#allowedProvinceCodesList == null or #allowedProvinceCodesList.contains(#provinceCode)}">
		<var name="saleOrderGraphqlId" value="#{#saleOrderJson.get('admin_graphql_api_id').getAsString()}" />
		<var name="getSaleOrderTransactionsRequestBodyJson">
			<![CDATA[
            {"query":"query{order(id: \"#{#saleOrderGraphqlId}\") {transactions { amountSet { shopMoney { amount currencyCode } } gateway kind status receipt }}}"}
            ]]>
		</var>
		<log level="info" value="#{#TAG} GetSaleOrderTransactionsRequestBodyJson : #{#getSaleOrderTransactionsRequestBodyJson}" />
		<http url="#{#url}/graphql.json" method="post" var="getSaleOrderTransactionsResponse" cacheClient="false">
			<header name="Content-Type" value="application/json" />
			<headers map="#{#authHeaders}" />
			<body>#{#getSaleOrderTransactionsRequestBodyJson}</body>
		</http>
		<log level="info" value="#{#TAG} GetSaleOrderTransactionsResponse : #{#getSaleOrderTransactionsResponse}" />

		<var name="saleOrderTransactionsJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#getSaleOrderTransactionsResponse).get('data').get('order').get('transactions')}" />
		<log level="info" value="#{#TAG} SaleOrderTransactionsArray : #{#saleOrderTransactionsJson.toString()}" />
		<var name="saleOrderTransactionsIterator" value="#{#saleOrderTransactionsJson.getAsJsonArray().iterator()}" />
		<var name="cashOnDelivery" value="#{false}" />
		<var name="giftDiscount" value="#{0}" />
		<var name="isOrderConfirmed" value="#{#saleOrderJson.get('confirmed').getAsBoolean()}" />
		<var name="fulfillmentStatus" value="#{#saleOrderJson.get('fulfillment_status')}" />
		<while condition="#{#saleOrderTransactionsIterator.hasNext()}">
			<var name="saleOrderTransaction" value="#{#saleOrderTransactionsIterator.next()}" />
			<var name="transactionStatus" value="#{#saleOrderTransaction.get('status').getAsString()}" />
			<!-- For pending and successful transactions populate cashOnDelivery and giftDiscount-->
			<var name="gateway" value="#{#saleOrderTransaction.get('gateway')}" />

			<if condition="#{
                !#gateway.isJsonNull() 
                and 
                (
                    'PENDING'.equalsIgnoreCase(#transactionStatus) 
                    or 
                    'SUCCESS'.equalsIgnoreCase(#transactionStatus)
                )}">

				<!-- Checking COD and todo: good comment for draft order-->
				<if condition="#{
                    #gateway.getAsString().contains('COD') 
                    or 
                    #gateway.getAsString().toLowerCase().contains('cash on delivery') 
                    or 
                    #gateway.getAsString().toLowerCase().contains('cash_on_delivery') 
                    or 
                    (
                        #syncDraftOrders =='true' 
                        and 
                        #gateway.getAsString().toLowerCase().contains('manual') 
                        and 
                        (
                            #saleOrderJson.get('financial_status').isJsonNull() 
                            or 
                            !'paid'.equalsIgnoreCase(#saleOrderJson.get('financial_status').getAsString())
                        )
                    )
                    or
                    (
                        !#gateway.getAsString().toLowerCase().contains('manual') 
                        and 
                        'partially_paid'.equalsIgnoreCase(#saleOrderJson.get('financial_status').getAsString())
                    )
                }">
					<var name="cashOnDelivery" value="#{true}" />
					<else>
						<var name="cashOnDelivery" value="#{false}" />
					</else>
				</if>
				<!-- Calculating giftDiscount -->
				<var name="transactionKind" value="#{#saleOrderTransaction.get('kind').getAsString()}" />
				<if condition="#{'gift_card'.equalsIgnoreCase(#gateway.getAsString()) and 'success'.equalsIgnoreCase(#transactionStatus)}">
					<if condition="#{'REFUND'.equalsIgnoreCase(#transactionKind)}">
						<var name="giftDiscount" value="#{#giftDiscount - #saleOrderTransaction.get('amountSet').get('shopMoney').get('amount').getAsDouble()}" />
						<else>
							<var name="giftDiscount" value="#{#saleOrderTransaction.get('amountSet').get('shopMoney').get('amount').getAsDouble() + #giftDiscount}" />
						</else>
					</if>
				</if>
				<if condition="#{#customFieldsCustomization != null and #customFieldsCustomization.contains('receiptJson')}">
					<var name="receipt" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#saleOrderTransaction, 'receipt')}" />
					<if condition="#{#receipt != null}">
						<var name="receipt" value="#{T(org.apache.commons.lang.StringEscapeUtils).unescapeJava(#receipt)}" />
						<var name="receipt" value="#{#receipt.replaceAll('=>',':')}" />
						<var name="receiptJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#receipt)}" />
						<else>
							<var name="receiptJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson('{}')}" />
						</else>
					</if>
				</if>
			</if>
			<log level="info" value="#{#TAG} SaleOrderTransaction : #{#saleOrderTransaction.toString()}, giftDiscount: #{#giftDiscount}, cashOnDelivery : #{#cashOnDelivery}" />
		</while>
		<if condition="#{
            #isOrderConfirmed
            and 
            (
                #fulfillmentStatus.isJsonNull() 
                or 
                #fulfillmentStatus.getAsString().equals('null') 
                or 
                #fulfillmentStatus.getAsString().equals('partial')
            )
        }">
			<!-- For COD orders or prepaid orders -->
			<if condition="#{
                #cashOnDelivery 
                or 
                (
                    !#saleOrderJson.get('financial_status').isJsonNull() 
                    and 
                    'PAID'.equalsIgnoreCase(#saleOrderJson.get('financial_status').getAsString())
                )}">

				<!-- Create order-details -->
				<invoke method="addSaleOrder" />

				<else>
					<!-- NOTE: Not throwing an error here, if scriptOutput is blank then order is skipped -->
					<log level="info" value="#{#TAG} Skipping sale order #{#saleOrderCode}. CashOnDelivery : #{#cashOnDelivery}, Financial Status : #{#saleOrderJson.get('financial_status').getAsString()}" />
				</else>
			</if>
			<else>
				<log level="info" value="#{#TAG} Skipping sale order #{#saleOrderCode}. Confirmed : #{#isOrderConfirmed} , Fulfillment Status : #{#fulfillmentStatus}}" />
			</else>
		</if>
		<else>
			<log level="info" value="#{#TAG} Skipping sale order #{#saleOrderCode}. ProvinceCode : #{#provinceCode} not allowed." />
		</else>
	</if>
</scraper>