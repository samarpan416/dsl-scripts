<scraper name="shopifyGetSaleOrderListScript" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.unicommerce.com/schema/scraper-1.0.xsd" cachehttpclient="false">
	<!-- 
        PARAMS: 
                applicationContext
                source
                channel
                customer
                isFrequentOrderSync
                pageNumber
                metadata - Map<String,Object> (Stores nextPageUrl, authHeaders, url)
                
                # ChannelParams    
                apiKey
                hostname
                password
                locationId
                token
                applicableProvinceCodes - String (comma seperated province codes)
                syncDraftOrders - Boolean
    -->

	<!-- In this version we get order on basis of parameter 
            updated_at_min 
            and 
            fulfillment_status=unfulfilled(Returns orders with fulfillment_status of null or partial) 
    -->
	<log level="info" value="#{#TAG} Fetching page : #{#pageNumber}" />

	<var name="getServiceBaseUrlResponse" value="#{new java.util.HashMap()}" />
	<invoke method="getServiceBaseUrl" script="shopifyUtils">
		<param name="getServiceBaseUrlResponse" value="#{#getServiceBaseUrlResponse}" />
	</invoke>
	<var name="SHOPIFY_MS_BASE_URL" value="#{#getServiceBaseUrlResponse.get('baseUrl')}" />

	<method name="prepareGetOrdersRequestHeaders">
		<var name="requiredHeaders" value="#{new java.util.HashMap()}" />
        <invoke method="getRequiredServiceRequestHeaders" script="shopifyUtils">
            <param name="requiredHeaders" value="#{#requiredHeaders}" />
            <param name="hostname" value="#{#hostname}" />
            <param name="locationId" value="#{#locationId}" />
            <param name="apiKey" value="#{#apiKey}" />
            <param name="password" value="#{#password}" />
            <param name="tenantCode" value="#{T(com.uniware.core.utils.UserContext).current().tenant.code}" />
            <param name="channelCode" value="#{#channel.code}" />
            <param name="channelSourceCode" value="#{#channel.sourceCode}" />
        </invoke>

		<var name="getOrdersRequestHeaders" value="#{new java.util.HashMap()}" />
		<var value="#{#getOrdersRequestHeaders.putAll(#requiredHeaders)}" />

		<log level="info" value="getOrdersRequestHeaders: #{#getOrdersRequestHeaders.toString()}" />
	</method>

	<method name="doGetOrdersRequest">
		<http method="GET" url="#{#url}" var="getOrdersResponse" fetchStatusCode="true" fetchResponseHeaders="true">
			<headers map="#{#getOrdersRequestHeaders}" />
		</http>

		<log level="info" value="getOrdersResponse: #{#getOrdersResponse} , getOrdersResponseHeaders: #{#getOrdersResponseHeaders.toString()} , getOrdersResponseCode: #{#getOrdersResponseResponseCode}" />
	</method>

	<method name="handleGetOrdersResponse">
		<if condition="#{#getOrdersResponseCode == 200}">
			<var name="getOrdersResponseJson" value="#{T(com.unifier.core.utils.JsonUtils).stringToJson(#getOrdersResponse)}" />
			<var name="responseStatus" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#getOrdersResponseJson, 'status')}" />
			<var name="responseMessage" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#getOrdersResponseJson, 'message')}" />
			<var name="responseErrors" value="#{#getOrdersResponseJson.get('errors')}" />
			<log level="info" value="responseStatus: #{#responseStatus}" />
			<if condition="#{'success'.equals(#responseStatus)}">
				<var name="responseStatus" value="#{T(com.unifier.core.utils.JsonUtils).getAsString(#getOrdersResponseJson, 'status')}" />
				<var name="orders" value="#{#getOrdersResponseJson.get('data')}" />
				<else>
					<log level="info" value="responseStatus: #{#responseStatus} is not success" />
				</else>
			</if>
			<else>
				<if condition="#{#getOrdersResponseCode == 400}">
					<log level="info" value="Error(s) in request | responseMessage: #{#responseMessage} | responseErrors: #{#responseErrors}" />
					<else>
						<log level="info" value="Error fetching orders" />
					</else>
				</if>
			</else>
		</if>
	</method>

	<method name="addSaleOrders" >
		<if condition="#{#orders == null or #orders.isJsonNull() or !#orders.isJsonArray()}">
			<log level="info" value="Invalid data in getOrdersResponse" />
			<else>
				<var name="ordersItr" value="#{#orders.iterator()}" />
				<while condition="#{#ordersItr.hasNext()}">
					<var name="order" value="#{#ordersItr.next()}" />
					<var name="orderId" value="#{#order.get('id').getAsString()}" />
					<log level="info" value="Adding order #{#orderId}" />
					<valueTag name="SaleOrder" value="#{#orderId}" />
					<var value="#{#resultItems.put(#orderId, #order.toString())}" />
				</while>
			</else>
		</if>
	</method>

	<method name="getTotalPages" >
		<var name="totalPages" value="#{#pageNumber}" />

		<var name="nextPageUrl" value="#{#getOrdersResponseHeaders.get('Link')}" />
		<if condition="#{T(com.unifier.core.utils.StringUtils).isNotBlank(#nextPageUrl)}">
			<var name="totalPages" value="#{#pageNumber + 1}" />
			<var value="#{#metadata.put('url', #nextPageUrl)}" />
		</if>
	</method>

	<if condition="#{#pageNumber eq 1}">
		<var name="url" value="#{#SHOPIFY_MS_BASE_URL}/orders" />
		<else>
			<var name="url" value="#{#metadata.get('url')}" />
		</else>
	</if>

	<invoke method="prepareGetOrdersRequestHeaders" />

	<invoke method="doGetOrdersRequest">
		<param name="url" value="#{#url}" />
	</invoke>

	<invoke method="handleGetOrdersResponse">
		<param name="getOrdersResponseCode" value="#{#getOrdersResponseResponseCode}" />
	</invoke>

	<startTag name="SaleOrders" />
		<invoke method="addSaleOrders" >
			<param name="orders" value="#{#orders}" />
		</invoke>
		<invoke method="getTotalPages" />
		<valueTag name="TotalPages" value="#{#totalPages}" />
	<endTag name="SaleOrders" />

</scraper>